version: '3.8'

services:
  # MCP PDL UI Service
  mcp-pdl-ui:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - MCP_SERVER_URL=http://mcp-pdl-server:8080
      - WEBSOCKET_URL=ws://mcp-pdl-server:8081
    depends_on:
      - mcp-pdl-server
    restart: unless-stopped
    networks:
      - mcp-pdl-network
    volumes:
      - ui-logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MCP PDL Server Service  
  mcp-pdl-server:
    build:
      context: ../..
      dockerfile: ./docker/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - WEBSOCKET_PORT=8081
      - DATABASE_URL=file:./data/pdl.db
    restart: unless-stopped
    networks:
      - mcp-pdl-network
    volumes:
      - server-data:/app/data
      - server-logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - mcp-pdl-ui
      - mcp-pdl-server
    restart: unless-stopped
    networks:
      - mcp-pdl-network

networks:
  mcp-pdl-network:
    driver: bridge

volumes:
  ui-logs:
    driver: local
  server-data:
    driver: local
  server-logs:
    driver: local